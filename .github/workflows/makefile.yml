name: Demonstration SCAN

on:
  push:
    branches: [ "master" ]

jobs:
  build_wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # ==================================================================
      - name: Current Date Time
        run: |
          echo "DT_NOW=$(date +%Y%m%d-%H%M%S)" >> ${GITHUB_ENV}

      # ==================================================================
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # ==================================================================
      - name: Build wheel
        run: |
          python -m pip install --user --upgrade build
          python -m build
          ls dist/whoisdomain*$(cat work/version)*.whl | xargs pip install

      # ==================================================================
      - name: Prepare for rl-scanner
        run: |
          rm -rf report # we need a empty report directory
          mkdir -p packages report # prepare the 2 volume mounts
          cp dist/whoisdomain*$(cat work/version)*.whl packages # copy the package to scan to the input volume location

      # ==================================================================
      - name: Test with rl-scanner
        env: # use environment variables
          RL_DEPLOY_SITE_KEY: ${{ secrets.RL_DEPLOY_SITE_KEY }}
          RL_DEPLOY_ENCODED_KEY: ${{ secrets.RL_DEPLOY_ENCODED_KEY }}
        run: |
          docker run --pull always --rm \
            -u $(id -u):$(id -g) \
            -v "$(pwd)/packages:/packages:ro" \
            -v "$(pwd)/report:/report" \
            -e RLSECURE_ENCODED_LICENSE="${RL_DEPLOY_ENCODED_KEY}" \
            -e RLSECURE_SITE_KEY="${RL_DEPLOY_SITE_KEY}" \
            reversinglabs/rl-scanner \
            rl-scan \
                --package-path=/packages/whoisdomain*$(cat work/version)*.whl \
                --report-path=/report \
                --report-format=all

      - name: Archive Report
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: report-${{ env.DT_NOW }}
          path: report

      # ==================================================================
      - name: Deploy simulate
        run: |
          echo "simulate a deploy"
          ls -l dist/
